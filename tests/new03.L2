 (:go
  (:fill_mult
   2 1	;; first is size, second is factor decoded
   ;;make array
   ((mem rsp 0) <- rsi)
   (rsi <- 1)
   (call allocate 2)

   ;;initialize counters
   (rdi <- rax)
   (rdi += 8)
   (rcx <- (mem rax 0))
   (rdx <- rcx)
   (r8 <- (mem rsp 0))

   :loop
   (cjump rcx = 0 :done :more)

   :more
   (rsi <- rdx)
   (rsi -= rcx)
   (rsi *= r8)
   (rsi *= 2)
   (rsi += 1)
   ((mem rdi 0) <- rsi)
   (rcx -= 1)
   (rdi += 8)
(goto :loop)

   :done
(return))

   (:min
	1 0 ;; first is pointer to array, second is int
	(rcx <- (mem rdi 0))
	(rdi += 8)
	(<- (mem rdi 0))

	:min_loop
	(cjump rcx = 0 :min_done :min_more)

	:min_more
	(rdx <- (mem rdi 0))
	(rcx -= 1)
	(rdi += 8)
	(cjump rdx < curmin :replace :min_loop)

	:replace
	(curmin <- rdx)
	(goto :min_loop)
	:min_done
	(rax <- curmin)
	(return))

	 (:go
	  0 0
	  (rdi <- 13)
	  (rsi <- 7)
	  ((mem rsp -8) <- :fill_ret1)
	  (call :fill_mult 2)

	  :fill_ret1
	  (rdi <- rax)
	  ((mem rsp -8) <- :min_ret)
	  (call :min 1)
	  :min_ret

	  (rdi <- rax)
	  (call print 1)
	  (return)))
